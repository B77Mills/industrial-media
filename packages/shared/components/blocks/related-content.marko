import queryFragment from "../../graphql/fragments/related-content-block";

$ const excludeContentTypes = [
  "Contact",
  "Company",
  "Document",
  "TextAd",
];

$ const allRelatedNodes = [];
$ const includeTaxonomyIds = input.taxonomyIds;

<marko-web-query|{ nodes }|
  name="related-published-content"
  params={ contentId: input.contentId, limit: 4, withSite: false, queryFragment }
>
  $ const excludeContentIds = nodes.map((node) => node.id)
  $ excludeContentIds.push(input.contentId);
  <if(nodes.length < 4 && includeTaxonomyIds.length)>
    $ allRelatedNodes.push(...nodes)
    <marko-web-query|{ nodes }|
      name="all-published-content"
      params={
        excludeContentTypes,
        excludeContentIds,
        includeTaxonomyIds,
        limit: 4-nodes.length,
        withSite: false,
        queryFragment
      }
      >
      $ allRelatedNodes.push(...nodes)
      <shared-content-list-flow
        nodes=allRelatedNodes
        inner-justified=false
        flush-y=true
        flush-x=false
        modifiers=["rows", "related-content"]
      >
        <@header>Related</@header>
        <@node modifiers=["related-content"]>
          <@title modifiers=["small"] />
        </@node>
      </shared-content-list-flow>
    </marko-web-query>
  </if>
  <else>
    <shared-content-list-flow
    nodes=nodes
    inner-justified=false
    flush-y=true
    flush-x=false
    modifiers=["rows", "related-content"]
    >
      <@header>Related</@header>
      <@node modifiers=["related-content"]>
        <@title modifiers=["small"] />
      </@node>
    </shared-content-list-flow>
  </else>
</marko-web-query>
