import issueFragment from "../graphql/fragments/magazine-issue-archive";

$ const { req, GAM } = out.global;
$ const { id, pageNode } = data;

<marko-web-magazine-publication-page-layout id=id>
  <@head>
    <marko-web-gtm-magazine-publication-context|{ context }| id=id>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-magazine-publication-context>
  </@head>
  <@above-container>
    <global-reveal-ad-handler select-all-targets=true path=GAM.getAdUnit({ name: "reskin", aliases: ["magazine"] }).path id="reveal-ad" />
  </@above-container>
  <@page>
    <marko-web-page-wrapper>
      <@section>
        <div class="row">
          <div class="col">
              <theme-breadcrumbs modifiers=["website-section"]>
                <@item><marko-web-link href="/magazine">Magazine</marko-web-link></@item>
              </theme-breadcrumbs>
            <marko-web-resolve-page|{ data: publication }| node=pageNode>
              <h1 class="page-wrapper__title">
                ${publication.name} Issue Archive
              </h1>
              <if(publication.description)>
                <p class="page-wrapper__deck">${publication.description}</p>
              </if>
            </marko-web-resolve-page>
          </div>
        </div>
      </@section>
      <@section>
        <div class="row">
          <div class="col-lg-12 infinite-scroll-target">
            <marko-web-load-more
              append-to=".infinite-scroll-target"
              component-name="global-magazine-issue-archive-flow"
              fragment-name="global-magazine-issue-archive"
              query-name="magazine-active-issues"
              query-params={ publicationId: id, requiresImage: true, limit: 16, requiresCoverImage: true }
              page-input={ for: "magazine-publication", id }
            />
          </div>
        </div>
      </@section>
    </marko-web-page-wrapper>
  </@page>
</marko-web-magazine-publication-page-layout>
