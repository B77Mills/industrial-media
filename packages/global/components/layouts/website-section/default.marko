import hierarchyAliases from "@parameter1/base-cms-marko-web/utils/hierarchy-aliases";
import { getAsArray } from "@parameter1/base-cms-object-path";

$ const { id, alias, name, pageNode } = input;
$ const sections = getAsArray(input, "sections");
$ const { GAM } = out.global;

<theme-website-section-page id=id alias=alias name=name>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      <marko-web-p1-events-track-website-section node=section />
    </marko-web-resolve-page>
    <${input.head} />
  </@head>
  <@above-container>
    <marko-web-resolve-page|{ data: content }| node=pageNode>
      $ const aliases = hierarchyAliases(content.primarySection);
      <global-reveal-ad-handler select-all-targets=true path=GAM.getAdUnit({ name: "reskin", aliases }).path id="reveal-ad" />
    </marko-web-resolve-page>
  </@above-container>
  <@page>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-page-wrapper>
        <for|s| of=sections>
          <@section|{ blockName }| modifiers=s.modifiers>
            <${s.renderBody}
              block-name=blockName
              section=section
              aliases=aliases
            />
          </@section>
        </for>
      </marko-web-page-wrapper>
    </marko-web-resolve-page>
  </@page>
  <@below-page>
    <if(input.belowPage)>
      <${input.belowPage} section-content=sectionContent />
    </if>
    <else>
      <marko-web-page-container for="website-section" tag="div" id=id modifiers=["below"]>
        <!-- Refresh sticky, right-rail infinite scroll ad -->
        <!-- <marko-web-gam-refresh-ad on="load-more-in-view" slot-id="gpt-ad-rail-infinite" /> -->

        <marko-web-resolve-page|{ data: section, resolved }| node=pageNode>
          $ const aliases = hierarchyAliases(section);
          <!-- $ const slots = adSlots({ aliases }); -->
          <marko-web-page-wrapper>
            <@section>
              <div class="row">
                <div class="col-lg-12 infinite-scroll-target">
                  $ const loadMoreParams = {
                    sectionId: id,
                    optionName: ["Featured Content", "Standard"],
                    excludeContentIds: [],
                    limit: 12,
                  };
                  $ if (alias === "home") delete loadMoreParams.sectionId;
                  <global-latest-content-feed-load-more-block max-pages=4>
                    <@query
                      name="website-scheduled-content"
                      params=loadMoreParams
                    />
                    <@page for="website-section" id=id />
                    <@adunit
                      ...GAM.getAdUnit({ name: "infinite-interstitial", aliases })
                      modifiers=["max-width-300", "margin-auto-x"]
                    />
                    <@native-x indexes=[0] name="default" aliases=aliases />
                  </global-latest-content-feed-load-more-block>
                </div>
              </div>
            </@section>
          </marko-web-page-wrapper>
        </marko-web-resolve-page>

      </marko-web-page-container>
    </else>
  </@below-page>
</theme-website-section-page>
